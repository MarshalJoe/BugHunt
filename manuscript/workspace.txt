## Delivering XSS payloads with Burp Intruder

In a [previous post](http://bughunting.guide/a-gentle-introduction-to-cross-site-scripting-xss/) I showed you how to detect XSS vulnerabilities the good 'old fashioned way &mdash; by directly submitting a series of increasingly obfuscated variations of the `alert(0)` classic.

That's a somewhat primitive approach and one that doesn't scale well: Large social networks, for example, have a vast array of input fields that make them impractical to test by hand. Sanitation filters can also be pretty idiosyncratic, and in order to exhaust the large number of possibilities (different tags, attributes, encodings, etc) that exist, it's necessary to at least partially automate the process.

I say *partially* because this isn't a scanner-type operation where you can enter a URL and let loose. Burp Intruder (which is available in the free version of the product) requires a little more tact. As a tool that requires more explicit enumeration of the payloads involved you could it even say it represents a more elegant tool, from a more sophisticated age...

Back to Burp: Intruder allows you to automate the act of feeding different payloads into multiple, specificed inputs. You can even specify the manner in which the payloads are submitted. But first, a definition of Intruder from Portswigger's own site. There's some marketing fluff, but if you skip to the good stuff, you'll see:

>A typical workflow using Burp Intruder is as follows:
> 
>* Identify an interesting or vulnerable request within any of the Burp Suite tools, and send this to Intruder.
>* Mark the locations in the request where you want to insert payloads.
>* Configure your attack payloads, using Intruder's highly configurable algorithms and preset lists, or your own custom list of payloads.
>* Start the attack and review the detailed results, including all requests made and responses received.
>* Analyze the results to achieve your chosen objective, using customizable filtering and sorting, or by defining your own rules for matching or extracting response data

This is a pretty accurate roadmap for the subject of this tutorial. Burp Intruder is an excellent (and again, free) tool that should be in the arsenal of every pentester.

### Installation

The first step in using Burp Intruder is [downloading Burp Suite](http://portswigger.net/burp/download.html). Since Burp is a java app, it's compatible with any OS that can run java (so, all of them). After you've downloaded and started up Burp Suite, follow these [browser-specific instructions](http://portswigger.net/burp/help/suite_gettingstarted.html) on how to configure your browser to run through the Burp proxy.

Before opening Burp, go to everybody's favorite neighborhood deliberately-vulnerable web app, [Google Gruyere](http://google-gruyere.appspot.com/).

![Google Gruyere info](images/GG_about.png)

If you've gone through the previous exercise, feel free to use the same app instance, although clearing it is fine too.

Log in and you should see this page.

![Google Gruyere login](images/GG_login.png)

Click on the "New Snippet" link.

![Google Gruyere new snippet](images/GG_newSnippet.png)


